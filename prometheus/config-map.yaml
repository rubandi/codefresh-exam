apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  labels:
    name: prometheus-server-conf
  namespace: monitoring
data:
  prometheus.rules: |-
    groups:
    - name: Cluster_state
      rules:
      - alert: KubeControllerIsDown
        expr: absent(kube_pod_container_status_running{job="kubernetes-pods", pod="kube-controller-manager-k8s-master"} == 1)
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Kubernetes controller manager is down"
          description: "Kubernetes controller manager is not in Running state or not created"
      - alert: NodeCpuHigh
        expr: sum(rate(node_cpu{job="kubernetes-pods", mode!="idle", mode!="iowait", mode!~"guest.*"}[1m])) BY (instance, cpu)*100 > 85
        for: 15m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage on {{ $labels.instance }} node"
          description: "{{ $labels.instance }} node has high utilization at least one of CPU cores (current value: {{ $value }})"
      - alert: NonPodCpuHigh
        expr: (sum(rate(container_cpu_usage_seconds_total{job="kubernetes-cadvisor", id="/"}[1m])) by (instance) - sum(rate(container_cpu_usage_seconds_total{job="kubernetes-cadvisor", image!=""}[1m])) by (instance))*100 > 30
        for: 15m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage by non-pod processes on {{ $labels.instance }} node"
          description: "Sum of CPU usage by non-pod processes on {{ $labels.instance }} node is higher than 30% (current value: {{ $value }})"
      - alert: PodMemoryHigh
        expr: (sum(container_memory_usage_bytes{job="kubernetes-cadvisor", image!=""}) by(pod_name, instance) / on(instance) group_left node_memory_MemTotal{job="kubernetes-pods"})*100 > 70
        labels:
          severity: warning
        annotations:
          summary: "High memory usage by {{ $labels.pod_name }} pod"
          description: "Memory usage by pod: {{ $labels.pod_name }} on {{ $labels.instance }} node is higher than 70% of node memory (current value: {{ $value }})"
  prometheus.yml: |-
    global:
      scrape_interval: 30s
      evaluation_interval: 30s
    rule_files:
      - /etc/prometheus/prometheus.rules
    alerting:
      alertmanagers:
      - scheme: http
        static_configs:
        - targets:
          - "alertmanager.monitoring.svc:9093"

    scrape_configs:

      - job_name: 'kubernetes-apiservers'

        kubernetes_sd_configs:
        - role: endpoints
        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

      - job_name: 'kubernetes-nodes'

        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        kubernetes_sd_configs:
        - role: node

        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc.cluster.local:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics

      
      - job_name: 'kubernetes-pods'

        kubernetes_sd_configs:
        - role: pod

        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_label_component]
          action: replace
          regex: kube-controller-manager
          replacement: true
          target_label: __meta_kubernetes_pod_annotation_prometheus_io_scrape
        - source_labels: [__meta_kubernetes_pod_label_component]
          action: replace
          regex: kube-controller-manager
          replacement: 10252
          target_label: __meta_kubernetes_pod_annotation_prometheus_io_port
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
        - source_labels: [__meta_kubernetes_pod_node_name]
          regex: (.+)
          replacement: $1
          target_label: instance

      - job_name: 'kubernetes-cadvisor'

        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        kubernetes_sd_configs:
        - role: node

        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc.cluster.local:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
      
      - job_name: 'kubernetes-service-endpoints'

        kubernetes_sd_configs:
        - role: endpoints

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        relabel_configs:
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
          action: replace
          target_label: __scheme__
          regex: (https?)
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
          action: replace
          target_label: __address__
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: kubernetes_name
